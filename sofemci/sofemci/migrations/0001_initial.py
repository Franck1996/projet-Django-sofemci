# Generated by Django 4.2.7 on 2025-09-26 16:48

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('chef_extrusion', 'Chef Zone Extrusion'), ('chef_soudure', 'Chef Zone Soudure'), ('chef_imprimerie', 'Chef Zone Imprimerie'), ('chef_recyclage', 'Chef Zone Recyclage'), ('superviseur', 'Superviseur'), ('direction', 'Direction')], default='superviseur', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('date_embauche', models.DateField(blank=True, null=True)),
                ('actif', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('A', 'Équipe A (06h00 - 14h00)'), ('B', 'Équipe B (14h00 - 22h00)'), ('C', 'Équipe C (22h00 - 06h00)')], max_length=1, unique=True)),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('description', models.TextField(blank=True)),
                ('chef_equipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Équipe',
                'verbose_name_plural': 'Équipes',
            },
        ),
        migrations.CreateModel(
            name='ZoneExtrusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('nom', models.CharField(max_length=50)),
                ('nombre_machines_max', models.IntegerField(default=4)),
                ('active', models.BooleanField(default=True)),
                ('chef_zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zone Extrusion',
                'verbose_name_plural': 'Zones Extrusion',
                'ordering': ['numero'],
            },
        ),
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('type_alerte', models.CharField(choices=[('critique', 'Critique'), ('important', 'Important'), ('info', 'Information'), ('maintenance', 'Maintenance')], max_length=15)),
                ('statut', models.CharField(choices=[('nouveau', 'Nouveau'), ('en_cours', 'En Cours'), ('resolu', 'Résolu'), ('ferme', 'Fermé')], default='nouveau', max_length=15)),
                ('section', models.CharField(max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_resolution', models.DateTimeField(blank=True, null=True)),
                ('assigne_a', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alertes_assignees', to=settings.AUTH_USER_MODEL)),
                ('cree_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='RapportMensuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mois', models.DateField()),
                ('total_production_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_extrusion_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_imprimerie_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_soudure_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_recyclage_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_dechets_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('rendement_moyen', models.DecimalField(decimal_places=2, max_digits=5)),
                ('taux_dechet_moyen', models.DecimalField(decimal_places=2, max_digits=5)),
                ('nombre_jours_production', models.IntegerField()),
                ('date_generation', models.DateTimeField(auto_now_add=True)),
                ('fichier_pdf', models.FileField(blank=True, null=True, upload_to='rapports/')),
                ('fichier_excel', models.FileField(blank=True, null=True, upload_to='rapports/')),
                ('genere_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-mois'],
                'unique_together': {('mois',)},
            },
        ),
        migrations.CreateModel(
            name='ProductionSoudure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_production', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('nombre_machines_actives', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(8)], verbose_name='Nombre moyen de machines actives')),
                ('production_bobines_finies_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production bobines produits finis (kg)')),
                ('production_bretelles_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production BRETELLE (EMBALLAGE) (kg)')),
                ('production_rema_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production REMA-PLASTIQUE (kg)')),
                ('production_batta_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production BATTA (kg)')),
                ('dechets_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total des déchets (kg)')),
                ('total_production_specifique_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_production_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('taux_dechet_pourcentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observations', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('valide', models.BooleanField(default=False)),
                ('cree_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Production Soudure',
                'verbose_name_plural': 'Productions Soudure',
                'ordering': ['-date_production'],
                'unique_together': {('date_production',)},
            },
        ),
        migrations.CreateModel(
            name='ProductionRecyclage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_production', models.DateField()),
                ('nombre_moulinex', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Nombre de moulinex')),
                ('production_broyage_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production journalière de broyage (kg)')),
                ('production_bache_noir_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production de bâche noire (kg)')),
                ('total_production_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('production_par_moulinex', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('taux_transformation_pourcentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observations', models.TextField(blank=True, verbose_name='Observations')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('valide', models.BooleanField(default=False)),
                ('cree_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sofemci.equipe', verbose_name='Équipe qui a travaillé')),
            ],
            options={
                'verbose_name': 'Production Recyclage',
                'verbose_name_plural': 'Productions Recyclage',
                'ordering': ['-date_production'],
                'unique_together': {('date_production', 'equipe')},
            },
        ),
        migrations.CreateModel(
            name='ProductionImprimerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_production', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('nombre_machines_actives', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Nombre moyen de machines actives')),
                ('production_bobines_finies_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production bobines produits finis (kg)')),
                ('production_bobines_semi_finies_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production bobines semi-finis (kg)')),
                ('dechets_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total des déchets (kg)')),
                ('total_production_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('taux_dechet_pourcentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('observations', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('valide', models.BooleanField(default=False)),
                ('cree_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Production Imprimerie',
                'verbose_name_plural': 'Productions Imprimerie',
                'ordering': ['-date_production'],
                'unique_together': {('date_production',)},
            },
        ),
        migrations.CreateModel(
            name='ProductionExtrusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_production', models.DateField()),
                ('heure_debut', models.TimeField()),
                ('heure_fin', models.TimeField()),
                ('chef_zone', models.CharField(help_text='Nom du chef de zone', max_length=100)),
                ('matiere_premiere_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Matière première utilisée (kg)')),
                ('nombre_machines_actives', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='Nombre moyen de machines actives')),
                ('nombre_machinistes', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nombre moyen de machinistes')),
                ('nombre_bobines_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Nombre de bobines produites (kg)')),
                ('production_finis_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production produits finis (kg)')),
                ('production_semi_finis_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Production produits semi-finis (kg)')),
                ('dechets_kg', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total des déchets (kg)')),
                ('total_production_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('rendement_pourcentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('taux_dechet_pourcentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('production_par_machine', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('observations', models.TextField(blank=True, verbose_name='Observations du jour')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('valide', models.BooleanField(default=False)),
                ('cree_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sofemci.equipe')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sofemci.zoneextrusion')),
            ],
            options={
                'verbose_name': 'Production Extrusion',
                'verbose_name_plural': 'Productions Extrusion',
                'ordering': ['-date_production', 'zone'],
                'unique_together': {('date_production', 'zone', 'equipe')},
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=10)),
                ('type_machine', models.CharField(choices=[('extrudeuse', 'Extrudeuse'), ('refroidisseur', 'Refroidisseur'), ('enrouleur', 'Enrouleur'), ('imprimante', 'Imprimante'), ('soudeuse', 'Soudeuse'), ('moulinex', 'Moulinex')], max_length=20)),
                ('section', models.CharField(choices=[('extrusion', 'Extrusion'), ('imprimerie', 'Imprimerie'), ('soudure', 'Soudure'), ('recyclage', 'Recyclage')], max_length=20)),
                ('etat', models.CharField(choices=[('actif', 'Active'), ('maintenance', 'Maintenance'), ('arret', 'Arrêtée'), ('panne', 'En Panne')], default='actif', max_length=15)),
                ('date_installation', models.DateField(blank=True, null=True)),
                ('derniere_maintenance', models.DateField(blank=True, null=True)),
                ('capacite_horaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('observations', models.TextField(blank=True)),
                ('zone_extrusion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sofemci.zoneextrusion')),
            ],
            options={
                'ordering': ['section', 'numero'],
                'unique_together': {('numero', 'section')},
            },
        ),
    ]
